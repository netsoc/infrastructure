#!/usr/bin/nft -f
flush ruleset

define lan_net = 10.69.0.0/16
define vpn_net = 10.42.0.0/24

define wireguard = 51820
define iperf3 = 5201
define fou = 5555

table inet filter {
  chain wan-tcp {
    tcp dport ssh accept
    tcp dport https accept
    tcp dport $iperf3 accept
  }
  chain wan-udp {
    udp dport $wireguard accept
    udp dport $fou accept
    udp dport $iperf3 accept
  }

  chain wan {
    # ICMP & IGMP
    ip6 nexthdr icmpv6 icmpv6 type {
      destination-unreachable,
      packet-too-big,
      time-exceeded,
      parameter-problem,
      mld-listener-query,
      mld-listener-report,
      mld-listener-reduction,
      nd-router-solicit,
      nd-router-advert,
      nd-neighbor-solicit,
      nd-neighbor-advert,
      ind-neighbor-solicit,
      ind-neighbor-advert,
      mld2-listener-report,
      echo-request
    } accept
    ip protocol icmp icmp type {
      destination-unreachable,
      router-solicitation,
      router-advertisement,
      time-exceeded,
      parameter-problem,
      echo-request
    } accept
    ip protocol igmp accept

    # separate chains for TCP / UDP
    ip protocol tcp tcp flags & (fin|syn|rst|ack) == syn ct state new jump wan-tcp
    ip protocol udp ct state new jump wan-udp
  }

  chain filter-port-forwards {
    # example
    #ip daddr 10.69.1.1 tcp dport { http, https } accept
  }

  chain input {
    type filter hook input priority 0; policy drop;

    # established/related connections
    ct state established,related accept

    # invalid connections
    ct state invalid drop

    # allow all from loopback / lan
    iif lo accept
    iifname { eth0, lan, vpn, tmpwan } accept

    iifname { wan, forward } jump wan
  }
  chain forward {
    type filter hook forward priority 0; policy drop;

    # lan can go anywhere
    iifname { eth0, lan, vpn, tmpwan } accept
    # allow specific tmpwan ips
    ip daddr 192.168.76.10-192.168.76.17 accept

    iifname wan oifname lan ct state related,established accept
    iifname wan oifname lan jump filter-port-forwards
  }
  chain output {
    type filter hook output priority 0; policy accept;
  }
}

table nat {
  chain port-forward {
    # example
    #tcp dport { http, https } dnat 10.69.1.1
  }
  chain prerouting {
    type nat hook prerouting priority 0;

    iifname wan jump port-forward
  }

  chain lan-port-forwarding {
    # example
    #ip daddr 10.69.1.1 tcp dport { http, https } snat $firewall
  }
  chain postrouting {
    type nat hook postrouting priority 100;

    oifname wan counter masquerade
    oifname lan ip saddr $lan_net jump lan-port-forwarding
    oifname lan ip saddr $vpn_net snat 10.69.0.1
  }
}

# vim:set ts=2 sw=2 et:
